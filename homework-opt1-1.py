def check_grid_constraints(grid):
    """
    检查 3x2 格子的填充是否满足相邻格子数字不同的条件。
    
    参数:
        grid: 长度为 6 的列表或字符串，表示格子的填充（0 或 1）。
              顺序为 [(0,0), (0,1), (1,0), (1,1), (2,0), (2,1)]。
    
    返回:
        1 如果满足条件，否则返回 0。
    """
    
    # 提取每个格子的值
    q0, q1, q2, q3, q4, q5 = [int(bit) for bit in grid]
    
    # 检查所有相邻对是否满足 q_i != q_j
    adjacent_pairs = [
        (q0, q1),  # (0,0) - (0,1)
        (q0, q2),  # (0,0) - (1,0)
        (q1, q3),  # (0,1) - (1,1)
        (q2, q3),  # (1,0) - (1,1)
        (q2, q4),  # (1,0) - (2,0)
        (q3, q5),  # (1,1) - (2,1)
        (q4, q5),  # (2,0) - (2,1)
    ]
    
    # 如果所有相邻对的数字都不同，则返回 1，否则返回 0
    if all(a != b for a, b in adjacent_pairs):
        return 1
    else:
        return 0